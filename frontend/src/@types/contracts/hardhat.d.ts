/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BlockImob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlockImob__factory>;
    getContractFactory(
      name: "ConsultImob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConsultImob__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC4907",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4907__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;
    getContractFactory(
      name: "Fii",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fii__factory>;
    getContractFactory(
      name: "FiiManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiiManagement__factory>;
    getContractFactory(
      name: "IBlockImob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBlockImob__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC4907",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4907__factory>;
    getContractFactory(
      name: "IGovDataReference",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovDataReference__factory>;
    getContractFactory(
      name: "OracleGov",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleGov__factory>;
    getContractFactory(
      name: "PaymentsManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentsManagement__factory>;
    getContractFactory(
      name: "Rent",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rent__factory>;
    getContractFactory(
      name: "Sell",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Sell__factory>;

    getContractAt(
      name: "BlockImob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlockImob>;
    getContractAt(
      name: "ConsultImob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConsultImob>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC4907",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4907>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;
    getContractAt(
      name: "Fii",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fii>;
    getContractAt(
      name: "FiiManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FiiManagement>;
    getContractAt(
      name: "IBlockImob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBlockImob>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC4907",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4907>;
    getContractAt(
      name: "IGovDataReference",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovDataReference>;
    getContractAt(
      name: "OracleGov",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleGov>;
    getContractAt(
      name: "PaymentsManagement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentsManagement>;
    getContractAt(
      name: "Rent",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Rent>;
    getContractAt(
      name: "Sell",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Sell>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
